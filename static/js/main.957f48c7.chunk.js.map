{"version":3,"sources":["TodoListTask.js","TodoListTasks.js","TodoListFooter.js","api.js","TodoListTitle.js","AddNewItemForm.js","reducer.js","TodoList.js","App.js","serviceWorker.js","store.js","index.js"],"names":["TodoListTask","state","editMode","title","_this","props","task","onIsDoneChanged","e","status","currentTarget","checked","changeStatus","id","onTitleChanged","setState","value","activateEditMode","deactivateEditMode","changeTitle","onDeleteTask","deleteTask","render","containerCssClass","isDone","priotityTitle","priority","react_default","a","createElement","className","type","onChange","onBlur","autoFocus","onClick","React","Component","TodoListTasks","tasksElements","tasks","map","src_TodoListTask","TodoListFooter","isHidden","onAllFilterClick","changeFilter","onCompletedFilterClick","onActiveFilterClick","onShowFiltersClick","onHideFiltersClick","classForAll","filterValue","classForCompleted","classForActive","instance","axios","create","baseURL","headers","API-KEY","withCredentials","api","createTask","newTaskTitle","todolistId","post","concat","createTodoList","getTodolists","get","updateTask","obj","put","_objectSpread","getTasks","deleteTodoList","delete","taskId","updateTodoTitle","newTodoTitle","TodoListTitle","activateEditModeTodo","deactivateEditModeTodo","onTitleChangeTodo","Fragment","onDelete","AddNewItemForm","error","onAddItemClick","newText","addItem","onKeyPress","key","classNameForInput","placeholder","ADD_TASK","initialState","todolists","addTaskTC","dispatch","then","res","newTask","addTaskAC","data","item","reducer","arguments","length","undefined","action","reducer_objectSpread","tl","Object","toConsumableArray","newTodolist","filter","t","TodoList","addTask","changeTask","deleteTodolist","newFilterValue","_this$props$tasks","src_TodoListTitle","src_AddNewItemForm","src_TodoListTasks","src_TodoListFooter","this","loadTasks","ConnectedTodolist","connect","setTasksAC","items","loadTasksTC","getState","find","forEach","updateTaskAC","updateTaskTC","deleteTodolistAC","deleteTodolistTC","deleteTaskAC","deleteTaskTC","App","addTodoList","addTodolist","src_TodoList","setTodolists","ConnectedApp","Boolean","window","location","hostname","match","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.957f48c7.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\n\r\nclass TodoListTask extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        title: this.props.task.title\r\n    };\r\n\r\n    onIsDoneChanged = (e) => {\r\n        let status = e.currentTarget.checked ? 2 : 0;\r\n        this.props.changeStatus(this.props.task.id, status);\r\n    };\r\n\r\n    onTitleChanged = (e) => {\r\n        this.setState({title: e.currentTarget.value})\r\n    };\r\n\r\n    activateEditMode = () => {\r\n        this.setState({editMode: true});\r\n    };\r\n\r\n    deactivateEditMode= () => {\r\n        this.setState({editMode: false});\r\n        this.props.changeTitle(this.props.task.id, this.state.title);\r\n    };\r\n\r\n    onDeleteTask = () => {\r\n        this.props.deleteTask(this.props.task.id);\r\n    };\r\n\r\n    render = () => {\r\n        let containerCssClass = this.props.task.isDone ? \"todoList-task done\" : \"todoList-task\";\r\n        let priotityTitle = \"\";\r\n        switch (this.props.task.priority) {\r\n            case 0: priotityTitle = \"Low\"; break;\r\n            case 1: priotityTitle = \"Middle\"; break;\r\n            case 2: priotityTitle = \"High\"; break;\r\n            case 3: priotityTitle = \"Urgently\"; break;\r\n            case 4: priotityTitle = \"Later\"; break;\r\n        }\r\n        return (\r\n                <div className={containerCssClass}>\r\n                    <input type=\"checkbox\" checked={this.props.task.status == 2}\r\n                           onChange={this.onIsDoneChanged}/>\r\n                    { this.state.editMode\r\n                        ? <input onBlur={this.deactivateEditMode} onChange={this.onTitleChanged} autoFocus={true} value={this.state.title} />\r\n                        : <span onClick={this.activateEditMode}>{this.props.task.title}</span>\r\n                    }, priority: {priotityTitle} <button onClick={this.onDeleteTask}>X</button>\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoListTask;\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport TodoListTask from \"./TodoListTask\";\r\n\r\nclass TodoListTasks extends React.Component {\r\n    render = () => {\r\n\r\n        let tasksElements = this.props.tasks.map( task => <TodoListTask task={task}\r\n                                                                        changeStatus={this.props.changeStatus}\r\n                                                                        changeTitle={this.props.changeTitle}\r\n                                                                        deleteTask={this.props.deleteTask}\r\n                                                                        />);\r\n\r\n        return (\r\n            <div className=\"todoList-tasks\">\r\n                {tasksElements}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoListTasks;\r\n\r\n","import React from 'react';\r\nimport '../src/App.css';\r\n\r\nclass TodoListFooter extends React.Component {\r\n\r\n    state = {\r\n        isHidden: false\r\n    }\r\n\r\n    onAllFilterClick = () => { this.props.changeFilter(\"All\"); }\r\n    onCompletedFilterClick = () => { this.props.changeFilter(\"Completed\"); }\r\n    onActiveFilterClick = () => { this.props.changeFilter(\"Active\"); }\r\n    onShowFiltersClick = () => { this.setState({isHidden: true}) }\r\n    onHideFiltersClick = () => { this.setState({isHidden: false}) }\r\n\r\n    render = (props) => {\r\n\r\n        let classForAll = this.props.filterValue === \"All\" ? \"filter-active\" : \"\";\r\n        let classForCompleted = this.props.filterValue === \"Completed\" ? \"filter-active\" : \"\";\r\n        let classForActive = this.props.filterValue === \"Active\" ? \"filter-active\" : \"\";\r\n\r\n        return (\r\n            <div className=\"todoList-footer\">\r\n                { !this.state.isHidden && <div>\r\n                     <button onClick={ this.onAllFilterClick } className={classForAll}>All</button>\r\n                     <button onClick={ this.onCompletedFilterClick } className={classForCompleted}>Completed</button>\r\n                     <button onClick={ this.onActiveFilterClick } className={classForActive}>Active</button>\r\n                  </div>\r\n                }\r\n                { !this.state.isHidden && <span onClick={ this.onShowFiltersClick }>hide</span> }\r\n                { this.state.isHidden && <span onClick={ this.onHideFiltersClick }>show</span> }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoListFooter;\r\n\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/todo-lists/\",\r\n    headers: {\"API-KEY\": \"edd25c6c-92b4-48d9-95c2-52b239caae08\"},\r\n    withCredentials: true\r\n});\r\n\r\n\r\nexport const api = {\r\n    createTask (newTaskTitle, todolistId) {\r\n        return instance.post(`${todolistId}/tasks`, {title: newTaskTitle})\r\n    },\r\n    createTodoList (title) {\r\n        return instance.post(\"\", {title: title})\r\n    },\r\n    getTodolists () {\r\n        return instance.get(\"\")\r\n    },\r\n    updateTask (task,obj) {\r\n      return instance.put(`tasks`,{...task, ...obj})\r\n    },\r\n    getTasks (todolistId) {\r\n        return instance.get(`${todolistId}/tasks`)\r\n    },\r\n    deleteTodoList (todolistId) {\r\n        return instance.delete(\"\" + todolistId)\r\n    },\r\n    deleteTask (taskId) {\r\n        return instance.delete(`tasks/${taskId}`)\r\n    },\r\n    updateTodoTitle (newTodoTitle, todolistId) {\r\n        return instance.put(\"\" + todolistId, {title: newTodoTitle})\r\n    }\r\n};","import React from 'react';\r\nimport './App.css';\r\nimport {api} from \"./api\";\r\n\r\n\r\nclass TodoListTitle extends React.Component {\r\n\r\n\r\n    state = {\r\n        editMode: false,\r\n        title: this.props.title\r\n    };\r\n\r\n    activateEditModeTodo = () => {\r\n        this.setState({editMode: true})\r\n    };\r\n\r\n    deactivateEditModeTodo = () => {\r\n        this.setState({editMode: false})\r\n\r\n    };\r\n    onTitleChangeTodo = (e) => {\r\n        this.setState(\r\n            {title: e.currentTarget.value},\r\n            () => {\r\n                api.updateTodoTitle(this.state.title, this.props.todolistId);\r\n            });\r\n    };\r\n\r\n    render = () => {\r\n        return (\r\n            <>\r\n                {\r\n                    this.state.editMode\r\n                        ? <input onBlur={this.deactivateEditModeTodo} onChange={this.onTitleChangeTodo} autoFocus={true} value={this.state.title}/>\r\n                        :\r\n                        <h3 className=\"todoList-header__title\" onClick={this.activateEditModeTodo}>{this.state.title}\r\n                            <button onClick={this.props.onDelete}>X</button>\r\n                        </h3>\r\n                }\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoListTitle;\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\n\r\nclass AddNewItemForm extends React.Component {\r\n    state = {\r\n        error: false,\r\n        title: \"\"\r\n    };\r\n\r\n    onAddItemClick = () => {\r\n        let newText = this.state.title;\r\n        this.setState({title: \"\"});\r\n\r\n        if (newText === \"\") {\r\n            this.setState({error: true});\r\n        } else {\r\n            this.setState({error: false});\r\n            this.props.addItem(newText);\r\n        }\r\n    };\r\n\r\n    onTitleChanged = (e) => {\r\n        this.setState({\r\n            error: false,\r\n            title: e.currentTarget.value\r\n        });\r\n    };\r\n    onKeyPress = (e) => {\r\n        if (e.key === \"Enter\") {\r\n            this.onAddItemClick();\r\n        }\r\n    };\r\n\r\n\r\n    render = () => {\r\n        let classNameForInput = this.state.error ? \"error\" : \"\";\r\n\r\n        return (\r\n            <div className=\"todoList-newTaskForm\">\r\n                <input className={classNameForInput} type=\"text\" placeholder=\"New item name\"\r\n                       onChange={this.onTitleChanged}\r\n                       onKeyPress={this.onKeyPress}\r\n                       value={this.state.title}\r\n                />\r\n                <button onClick={this.onAddItemClick}>Add</button>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddNewItemForm;\r\n\r\n","import {api} from \"./api\";\r\n\r\nexport const ADD_TODOLIST = \"TodoList/Reducer/ADD-TODOLIST\";\r\nexport const DELETE_TODOLIST = \"TodoList/Reducer/DELETE-TODOLIST\";\r\nexport const DELETE_TASK = \"TodoList/Reducer/DELETE-TASK\";\r\nexport const ADD_TASK = \"TodoList/Reducer/ADD-TASK\";\r\nexport const SET_TASKS = \"TodoList/Reducer/SET_TASKS\";\r\nexport const UPDATE_TASK = \"TodoList/Reducer/UPDATE-TASK\";\r\nexport const SET_TODOLISTS = \"TodoList/Reducer/SET_TODOLISTS\";\r\n\r\nconst initialState = {\r\n    \"todolists\": []\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_TASKS:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(tl => {\r\n                    if (tl.id !== action.todolistId) {\r\n                        return tl;\r\n                    } else {\r\n                        return {...tl, tasks: action.tasks}\r\n                    }\r\n                })\r\n            };\r\n        case SET_TODOLISTS:\r\n            return {\r\n                ...state,\r\n                todolists: action.todolists.map(tl => ({...tl, tasks: []}))\r\n            };\r\n        case ADD_TODOLIST:\r\n            return {\r\n                ...state,\r\n                todolists: [...state.todolists, action.newTodolist]\r\n            };\r\n        case DELETE_TODOLIST:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.filter(tl => tl.id !== action.todolistId)\r\n            };\r\n        case DELETE_TASK:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(tl => {\r\n                    if (tl.id === action.todolistId) {\r\n                        return {\r\n                            ...tl,\r\n                            tasks: tl.tasks.filter(t => t.id !== action.taskId)\r\n                        }\r\n                    } else {\r\n                        return tl\r\n                    }\r\n                })\r\n            };\r\n        case ADD_TASK:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(tl => {\r\n                    if (tl.id === action.todolistId) {\r\n                        return {...tl, tasks: [...tl.tasks, action.newTask]}\r\n                    } else {\r\n                        return tl\r\n                    }\r\n                })\r\n            };\r\n        case UPDATE_TASK:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(tl => {\r\n                    if (tl.id === action.todolistId) {\r\n                        return {\r\n                            ...tl,\r\n                            tasks: tl.tasks.map(t => {\r\n                                if (t.id !== action.taskId) {\r\n                                    return t;\r\n                                } else {\r\n                                    return {...t, ...action.obj};\r\n                                }\r\n                            })\r\n                        }\r\n                    } else {\r\n                        return tl\r\n                    }\r\n                })\r\n            }\r\n    }\r\n    return state;\r\n};\r\n\r\nconst updateTaskAC = (taskId, obj, todolistId) => {\r\n    return {type: UPDATE_TASK, taskId, obj, todolistId};\r\n};\r\nconst deleteTodolistAC = (todolistId) => {\r\n    return {\r\n        type: DELETE_TODOLIST,\r\n        todolistId: todolistId\r\n    };\r\n};\r\nconst deleteTaskAC = (todolistId, taskId) => {\r\n    return {\r\n        type: DELETE_TASK,\r\n        todolistId,\r\n        taskId\r\n    };\r\n};\r\nconst addTaskAC = (newTask, todolistId) => {\r\n    return {type: ADD_TASK, newTask, todolistId};\r\n};\r\nconst setTasksAC = (tasks, todolistId) => {\r\n    return {type: SET_TASKS, tasks, todolistId};\r\n};\r\nconst addTodolistAC = (newTodolist) => {\r\n    return {\r\n        type: ADD_TODOLIST,\r\n        newTodolist: newTodolist\r\n    }\r\n};\r\nconst setTodolistsAC = (todolists) => {\r\n    return {\r\n        type: SET_TODOLISTS,\r\n        todolists: todolists\r\n    }\r\n};\r\n\r\n\r\n\r\nexport const loadTasksTC = (todolistId) => {\r\n    return (dispatch) => {\r\n        api.getTasks(todolistId)\r\n            .then(res => {\r\n                dispatch(setTasksAC(res.data.items, todolistId));\r\n            });\r\n    }\r\n};\r\nexport const addTaskTC = (title, todolistId) => {\r\n    return (dispatch) => {\r\n        api.createTask(title, todolistId).then(res => {\r\n            dispatch(addTaskAC(res.data.data.item, todolistId));\r\n        });\r\n    }\r\n};\r\nexport const deleteTodolistTC = (todolistId) => {\r\n    return (dispatch) => {\r\n        api.deleteTodoList(todolistId).then(res => {\r\n            dispatch(deleteTodolistAC(todolistId));\r\n        });\r\n    }\r\n};\r\nexport const deleteTaskTC = (todolistId, taskId) => {\r\n    return (dispatch) => {\r\n        api.deleteTask(taskId)\r\n            .then(res => {\r\n                dispatch(deleteTaskAC(todolistId, taskId));\r\n            });\r\n    }\r\n};\r\nexport const updateTaskTC = (taskId, obj, todolistId) => {\r\n    return (dispatch, getState) => {\r\n        getState()\r\n            .todolists\r\n            .find(tl => tl.id === todolistId)\r\n            .tasks.forEach(task => {\r\n            if (task.id === taskId) {\r\n                api.updateTask({...task, ...obj})\r\n                    .then(res => {\r\n                        dispatch(updateTaskAC(taskId, obj, todolistId))\r\n                    })\r\n            }\r\n        })\r\n    }\r\n};\r\nexport const addTodolistTC = (title) => {\r\n    return (dispatch) => {\r\n        api.createTodoList(title).then(res => {\r\n            dispatch(addTodolistAC(res.data.data.item));\r\n        });\r\n    }\r\n};\r\nexport const setTodolistTC = () => {\r\n    return (dispatch) => {\r\n        api.getTodolists()\r\n            .then(res => {\r\n                dispatch(setTodolistsAC(res.data));\r\n            });\r\n    }\r\n};\r\n\r\n\r\nexport default reducer;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport TodoListTasks from \"./TodoListTasks\";\r\nimport TodoListFooter from \"./TodoListFooter\";\r\nimport TodoListTitle from \"./TodoListTitle\";\r\nimport AddNewItemForm from \"./AddNewItemForm\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    addTaskTC,\r\n    deleteTaskTC,\r\n    deleteTodolistTC,\r\n    loadTasksTC,\r\n    updateTaskTC\r\n} from \"./reducer\";\r\n\r\n\r\nclass TodoList extends React.Component {\r\n    componentDidMount() {\r\n        this.props.loadTasks(this.props.id);\r\n    }\r\n\r\n    state = {\r\n        filterValue: \"All\"\r\n    };\r\n\r\n    addTask = (title) => {\r\n        this.props.addTask(title, this.props.id);\r\n    };\r\n    changeTask = (taskId, obj) => {\r\n        this.props.updateTask(taskId, obj, this.props.id)\r\n    };\r\n    deleteTodolist = () => {\r\n        this.props.deleteTodolist(this.props.id);\r\n    };\r\n    deleteTask = (taskId) => {\r\n        this.props.deleteTask(taskId, this.props.id);\r\n    };\r\n    changeFilter = (newFilterValue) => {\r\n        this.setState({filterValue: newFilterValue});\r\n    };\r\n    changeStatus = (taskId, status) => {\r\n        this.changeTask(taskId, {status: status});\r\n    };\r\n    changeTitle = (taskId, title) => {\r\n        this.changeTask(taskId, {title: title});\r\n    };\r\n\r\n    render = () => {\r\n        let {tasks = []} = this.props;\r\n        return (\r\n            <div className=\"todoList\">\r\n                <div className=\"todoList-header\">\r\n                    <TodoListTitle title={this.props.title} onDelete={this.deleteTodolist} todolistId={this.props.id}/>\r\n                    <AddNewItemForm addItem={this.addTask}/>\r\n\r\n                </div>\r\n\r\n                <TodoListTasks changeStatus={this.changeStatus}\r\n                               changeTitle={this.changeTitle}\r\n                               deleteTask={this.deleteTask}\r\n                               tasks={tasks.filter(t => {\r\n                                   if (this.state.filterValue === \"All\") {\r\n                                       return true;\r\n                                   }\r\n                                   if (this.state.filterValue === \"Active\") {\r\n                                       return t.isDone === false;\r\n                                   }\r\n                                   if (this.state.filterValue === \"Completed\") {\r\n                                       return t.isDone === true;\r\n                                   }\r\n                               })}/>\r\n                <TodoListFooter changeFilter={this.changeFilter} filterValue={this.state.filterValue}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addTask(title, todolistId) {\r\n            dispatch(addTaskTC(title, todolistId));\r\n        },\r\n        loadTasks(todolistId) {\r\n            dispatch(loadTasksTC(todolistId));\r\n        },\r\n        updateTask(taskId, obj, todolistId) {\r\n            dispatch(updateTaskTC(taskId, obj, todolistId));\r\n        },\r\n        deleteTodolist: (todolistId) => {\r\n            dispatch(deleteTodolistTC(todolistId))\r\n        },\r\n        deleteTask: (taskId, todolistId) => {\r\n            dispatch(deleteTaskTC(todolistId, taskId))\r\n        }\r\n    }\r\n};\r\n\r\nconst ConnectedTodolist = connect(null, mapDispatchToProps)(TodoList);\r\n\r\nexport default ConnectedTodolist;\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport TodoList from \"./TodoList\";\r\nimport AddNewItemForm from \"./AddNewItemForm\";\r\nimport {connect} from \"react-redux\";\r\nimport {addTodolistTC, setTodolistTC} from \"./reducer\";\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.setTodolists();\r\n    }\r\n\r\n    addTodoList = (title) => {\r\n        this.props.addTodolist(title);\r\n    };\r\n\r\n\r\n    render = () => {\r\n        const todolists = this.props.todolists.map(tl => <TodoList key={tl.id} id={tl.id} title={tl.title} tasks={tl.tasks}/>)\r\n\r\n        return (\r\n            <>\r\n                <div>\r\n                    <AddNewItemForm addItem={this.addTodoList}/>\r\n                </div>\r\n                <div className=\"App\">\r\n                    {todolists}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        todolists: state.todolists\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setTodolists: () => {\r\n            dispatch(setTodolistTC())\r\n        },\r\n        addTodolist: (newTodolist) => {\r\n            dispatch(addTodolistTC(newTodolist))\r\n        }\r\n    }\r\n};\r\n\r\nconst ConnectedApp = connect(mapStateToProps, mapDispatchToProps)(App);\r\nexport default ConnectedApp;\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import {applyMiddleware, createStore} from \"redux\";\r\nimport reducer from \"./reducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from \"./store\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}